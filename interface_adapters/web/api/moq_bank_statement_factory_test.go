// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package api

import (
	"github.com/dc0d/workshop/domain_model"
	"sync"
)

var (
	lockBankStatementFactoryMockCreateBankStatement sync.RWMutex
)

// Ensure, that BankStatementFactoryMock does implement model.BankStatementFactory.
// If this is not the case, regenerate this file with moq.
var _ model.BankStatementFactory = &BankStatementFactoryMock{}

// BankStatementFactoryMock is a mock implementation of model.BankStatementFactory.
//
//     func TestSomethingThatUsesBankStatementFactory(t *testing.T) {
//
//         // make and configure a mocked model.BankStatementFactory
//         mockedBankStatementFactory := &BankStatementFactoryMock{
//             CreateBankStatementFunc: func(repo model.StatementViewRepository) model.BankStatement {
// 	               panic("mock out the CreateBankStatement method")
//             },
//         }
//
//         // use mockedBankStatementFactory in code that requires model.BankStatementFactory
//         // and then make assertions.
//
//     }
type BankStatementFactoryMock struct {
	// CreateBankStatementFunc mocks the CreateBankStatement method.
	CreateBankStatementFunc func(repo model.StatementViewRepository) model.BankStatement

	// calls tracks calls to the methods.
	calls struct {
		// CreateBankStatement holds details about calls to the CreateBankStatement method.
		CreateBankStatement []struct {
			// Repo is the repo argument value.
			Repo model.StatementViewRepository
		}
	}
}

// CreateBankStatement calls CreateBankStatementFunc.
func (mock *BankStatementFactoryMock) CreateBankStatement(repo model.StatementViewRepository) model.BankStatement {
	if mock.CreateBankStatementFunc == nil {
		panic("BankStatementFactoryMock.CreateBankStatementFunc: method is nil but BankStatementFactory.CreateBankStatement was just called")
	}
	callInfo := struct {
		Repo model.StatementViewRepository
	}{
		Repo: repo,
	}
	lockBankStatementFactoryMockCreateBankStatement.Lock()
	mock.calls.CreateBankStatement = append(mock.calls.CreateBankStatement, callInfo)
	lockBankStatementFactoryMockCreateBankStatement.Unlock()
	return mock.CreateBankStatementFunc(repo)
}

// CreateBankStatementCalls gets all the calls that were made to CreateBankStatement.
// Check the length with:
//     len(mockedBankStatementFactory.CreateBankStatementCalls())
func (mock *BankStatementFactoryMock) CreateBankStatementCalls() []struct {
	Repo model.StatementViewRepository
} {
	var calls []struct {
		Repo model.StatementViewRepository
	}
	lockBankStatementFactoryMockCreateBankStatement.RLock()
	calls = mock.calls.CreateBankStatement
	lockBankStatementFactoryMockCreateBankStatement.RUnlock()
	return calls
}
