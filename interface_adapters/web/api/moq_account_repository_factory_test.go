// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package api

import (
	"github.com/dc0d/workshop/domain_model"
	"sync"
)

var (
	lockAccountRepositoryFactoryMockCreateAccountRepository sync.RWMutex
)

// Ensure, that AccountRepositoryFactoryMock does implement model.AccountRepositoryFactory.
// If this is not the case, regenerate this file with moq.
var _ model.AccountRepositoryFactory = &AccountRepositoryFactoryMock{}

// AccountRepositoryFactoryMock is a mock implementation of model.AccountRepositoryFactory.
//
//     func TestSomethingThatUsesAccountRepositoryFactory(t *testing.T) {
//
//         // make and configure a mocked model.AccountRepositoryFactory
//         mockedAccountRepositoryFactory := &AccountRepositoryFactoryMock{
//             CreateAccountRepositoryFunc: func() model.AccountRepository {
// 	               panic("mock out the CreateAccountRepository method")
//             },
//         }
//
//         // use mockedAccountRepositoryFactory in code that requires model.AccountRepositoryFactory
//         // and then make assertions.
//
//     }
type AccountRepositoryFactoryMock struct {
	// CreateAccountRepositoryFunc mocks the CreateAccountRepository method.
	CreateAccountRepositoryFunc func() model.AccountRepository

	// calls tracks calls to the methods.
	calls struct {
		// CreateAccountRepository holds details about calls to the CreateAccountRepository method.
		CreateAccountRepository []struct {
		}
	}
}

// CreateAccountRepository calls CreateAccountRepositoryFunc.
func (mock *AccountRepositoryFactoryMock) CreateAccountRepository() model.AccountRepository {
	if mock.CreateAccountRepositoryFunc == nil {
		panic("AccountRepositoryFactoryMock.CreateAccountRepositoryFunc: method is nil but AccountRepositoryFactory.CreateAccountRepository was just called")
	}
	callInfo := struct {
	}{}
	lockAccountRepositoryFactoryMockCreateAccountRepository.Lock()
	mock.calls.CreateAccountRepository = append(mock.calls.CreateAccountRepository, callInfo)
	lockAccountRepositoryFactoryMockCreateAccountRepository.Unlock()
	return mock.CreateAccountRepositoryFunc()
}

// CreateAccountRepositoryCalls gets all the calls that were made to CreateAccountRepository.
// Check the length with:
//     len(mockedAccountRepositoryFactory.CreateAccountRepositoryCalls())
func (mock *AccountRepositoryFactoryMock) CreateAccountRepositoryCalls() []struct {
} {
	var calls []struct {
	}
	lockAccountRepositoryFactoryMockCreateAccountRepository.RLock()
	calls = mock.calls.CreateAccountRepository
	lockAccountRepositoryFactoryMockCreateAccountRepository.RUnlock()
	return calls
}
