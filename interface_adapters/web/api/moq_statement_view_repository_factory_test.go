// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package api

import (
	"github.com/dc0d/workshop/domain_model"
	"sync"
)

var (
	lockStatementViewRepositoryFactoryMockCreateStatementViewRepository sync.RWMutex
)

// Ensure, that StatementViewRepositoryFactoryMock does implement model.StatementViewRepositoryFactory.
// If this is not the case, regenerate this file with moq.
var _ model.StatementViewRepositoryFactory = &StatementViewRepositoryFactoryMock{}

// StatementViewRepositoryFactoryMock is a mock implementation of model.StatementViewRepositoryFactory.
//
//     func TestSomethingThatUsesStatementViewRepositoryFactory(t *testing.T) {
//
//         // make and configure a mocked model.StatementViewRepositoryFactory
//         mockedStatementViewRepositoryFactory := &StatementViewRepositoryFactoryMock{
//             CreateStatementViewRepositoryFunc: func() model.StatementViewRepository {
// 	               panic("mock out the CreateStatementViewRepository method")
//             },
//         }
//
//         // use mockedStatementViewRepositoryFactory in code that requires model.StatementViewRepositoryFactory
//         // and then make assertions.
//
//     }
type StatementViewRepositoryFactoryMock struct {
	// CreateStatementViewRepositoryFunc mocks the CreateStatementViewRepository method.
	CreateStatementViewRepositoryFunc func() model.StatementViewRepository

	// calls tracks calls to the methods.
	calls struct {
		// CreateStatementViewRepository holds details about calls to the CreateStatementViewRepository method.
		CreateStatementViewRepository []struct {
		}
	}
}

// CreateStatementViewRepository calls CreateStatementViewRepositoryFunc.
func (mock *StatementViewRepositoryFactoryMock) CreateStatementViewRepository() model.StatementViewRepository {
	if mock.CreateStatementViewRepositoryFunc == nil {
		panic("StatementViewRepositoryFactoryMock.CreateStatementViewRepositoryFunc: method is nil but StatementViewRepositoryFactory.CreateStatementViewRepository was just called")
	}
	callInfo := struct {
	}{}
	lockStatementViewRepositoryFactoryMockCreateStatementViewRepository.Lock()
	mock.calls.CreateStatementViewRepository = append(mock.calls.CreateStatementViewRepository, callInfo)
	lockStatementViewRepositoryFactoryMockCreateStatementViewRepository.Unlock()
	return mock.CreateStatementViewRepositoryFunc()
}

// CreateStatementViewRepositoryCalls gets all the calls that were made to CreateStatementViewRepository.
// Check the length with:
//     len(mockedStatementViewRepositoryFactory.CreateStatementViewRepositoryCalls())
func (mock *StatementViewRepositoryFactoryMock) CreateStatementViewRepositoryCalls() []struct {
} {
	var calls []struct {
	}
	lockStatementViewRepositoryFactoryMockCreateStatementViewRepository.RLock()
	calls = mock.calls.CreateStatementViewRepository
	lockStatementViewRepositoryFactoryMockCreateStatementViewRepository.RUnlock()
	return calls
}
